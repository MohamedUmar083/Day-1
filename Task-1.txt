Write a blog on Difference between HTTP1.1 vs HTTP2

Http 1.1

1-HTTP/1.1, requests and responses are handled sequentially, which means that only one request can be processed at a time on a single TCP connection.
2-Headers in HTTP/1.1 are plaintext and sent with each request and response. This redundancy can result in increased overhead, especially when transmitting large amounts of data or making multiple requests.
3-With HTTP/1.1, server-client communication is strictly request-driven. The server can't initiate data transfer to the client without a prior request, potentially leading to suboptimal resource loading.
4-Requests in HTTP/1.1 are treated equally, irrespective of their importance or urgency. This lack of prioritization can result in critical resources being delayed behind less essential ones, leading to subpar performance.
5-HTTP/1.1 relies on plaintext for data transmission, which is human-readable but less efficient in terms of processing and bandwidth utilization.

Http 2

1-HTTP/2: Unlike its predecessor, HTTP/2 introduces multiplexing, allowing multiple requests and responses to be sent and received simultaneously over a single TCP connection.
2-HTTP/2: HTTP/2 employs header compression techniques such as HPACK, which efficiently compresses headers before transmission.
3-HTTP/2: HTTP/2 introduces server push, enabling the server to proactively send resources to the client before they are explicitly requested.
4-HTTP/2: HTTP/2 introduces stream prioritization, allowing clients to assign priority levels to different resources.
5-HTTP/2: In contrast, HTTP/2 employs a binary protocol, which uses binary encoding for data transmission. 